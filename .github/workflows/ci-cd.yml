name: Symfony CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  symfony-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    defaults:
      run:
        working-directory: backend   # ðŸ‘‰ toutes les commandes sâ€™exÃ©cutent dans backend/

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          extensions: mbstring, intl, pdo_mysql, openssl

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # âœ… GÃ©nÃ©ration des clÃ©s JWT
      - name: Generate JWT keys
        run: |
          mkdir -p config/jwt
          openssl genrsa -out config/jwt/private.pem -aes256 -passout pass:jwt_pass 4096
          openssl rsa -pubout -in config/jwt/private.pem -out config/jwt/public.pem -passin pass:jwt_pass

      - name: Symfony lint
        run: |
          php bin/console lint:yaml config
          php bin/console lint:twig templates
          php bin/console lint:container --env=test

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            mysqladmin ping -h127.0.0.1 -uroot -proot && break
            echo "Waiting for database..."
            sleep 5
          done

      - name: Create test database schema
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:migrations:migrate --env=test --no-interaction

      - name: Run PHPUnit tests
        run: php bin/phpunit
